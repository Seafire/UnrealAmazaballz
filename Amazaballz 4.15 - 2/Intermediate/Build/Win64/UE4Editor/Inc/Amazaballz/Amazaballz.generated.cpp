// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Amazaballz.h"
#include "Amazaballz.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1Amazaballz() {}
	void AC_Ball::StaticRegisterNativesAC_Ball()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_Ball::StaticClass(), "Respawn",(Native)&AC_Ball::execRespawn);
	}
	IMPLEMENT_CLASS(AC_Ball, 318597172);
	void AC_Character::StaticRegisterNativesAC_Character()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "CanBeAttacked",(Native)&AC_Character::execCanBeAttacked);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "CanUsePickups",(Native)&AC_Character::execCanUsePickups);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "GetIndex",(Native)&AC_Character::execGetIndex);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "GetLives",(Native)&AC_Character::execGetLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "GetSpeed",(Native)&AC_Character::execGetSpeed);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "HasInfiniteLives",(Native)&AC_Character::execHasInfiniteLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "IsSpawning",(Native)&AC_Character::execIsSpawning);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "Respawn",(Native)&AC_Character::execRespawn);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetCanBeAttacked",(Native)&AC_Character::execSetCanBeAttacked);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetCanUsePickups",(Native)&AC_Character::execSetCanUsePickups);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetIndex",(Native)&AC_Character::execSetIndex);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetInfiniteLives",(Native)&AC_Character::execSetInfiniteLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetLives",(Native)&AC_Character::execSetLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetSpawningStatus",(Native)&AC_Character::execSetSpawningStatus);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetSpawnPosition",(Native)&AC_Character::execSetSpawnPosition);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetSpeed",(Native)&AC_Character::execSetSpeed);
		FNativeFunctionRegistrar::RegisterFunction(AC_Character::StaticClass(), "SetSpeedToNormal",(Native)&AC_Character::execSetSpeedToNormal);
	}
	IMPLEMENT_CLASS(AC_Character, 3282853505);
	void AC_BaseObstacle::StaticRegisterNativesAC_BaseObstacle()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_BaseObstacle::StaticClass(), "ObstacleLeft",(Native)&AC_BaseObstacle::execObstacleLeft);
		FNativeFunctionRegistrar::RegisterFunction(AC_BaseObstacle::StaticClass(), "ObstacleResponse",(Native)&AC_BaseObstacle::execObstacleResponse);
	}
	IMPLEMENT_CLASS(AC_BaseObstacle, 2932725226);
	void AC_HoleObstacle::StaticRegisterNativesAC_HoleObstacle()
	{
	}
	IMPLEMENT_CLASS(AC_HoleObstacle, 2573765469);
	void AC_PitObstacle::StaticRegisterNativesAC_PitObstacle()
	{
	}
	IMPLEMENT_CLASS(AC_PitObstacle, 2687589879);
static class UEnum* E_AffectedCharacters_StaticEnum()
{
	extern AMAZABALLZ_API class UPackage* Z_Construct_UPackage__Script_Amazaballz();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AMAZABALLZ_API class UEnum* Z_Construct_UEnum_Amazaballz_E_AffectedCharacters();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Amazaballz_E_AffectedCharacters, Z_Construct_UPackage__Script_Amazaballz(), TEXT("E_AffectedCharacters"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_E_AffectedCharacters(E_AffectedCharacters_StaticEnum, TEXT("/Script/Amazaballz"), TEXT("E_AffectedCharacters"), false, nullptr, nullptr);
	void AC_BasePickup::StaticRegisterNativesAC_BasePickup()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_BasePickup::StaticClass(), "PickupDestroy",(Native)&AC_BasePickup::execPickupDestroy);
		FNativeFunctionRegistrar::RegisterFunction(AC_BasePickup::StaticClass(), "PickupResponse",(Native)&AC_BasePickup::execPickupResponse);
	}
	IMPLEMENT_CLASS(AC_BasePickup, 1178290032);
	void AC_CrystalSkullPickup::StaticRegisterNativesAC_CrystalSkullPickup()
	{
	}
	IMPLEMENT_CLASS(AC_CrystalSkullPickup, 780783135);
	void AC_DisablePickup::StaticRegisterNativesAC_DisablePickup()
	{
	}
	IMPLEMENT_CLASS(AC_DisablePickup, 3582880404);
	void AC_FreezePickup::StaticRegisterNativesAC_FreezePickup()
	{
	}
	IMPLEMENT_CLASS(AC_FreezePickup, 1211597214);
	void AC_InvisibilityPickup::StaticRegisterNativesAC_InvisibilityPickup()
	{
	}
	IMPLEMENT_CLASS(AC_InvisibilityPickup, 1661708613);
	void AC_MirrorPickup::StaticRegisterNativesAC_MirrorPickup()
	{
	}
	IMPLEMENT_CLASS(AC_MirrorPickup, 2685046250);
	void AC_SpeedBoostPickup::StaticRegisterNativesAC_SpeedBoostPickup()
	{
	}
	IMPLEMENT_CLASS(AC_SpeedBoostPickup, 399336174);
	void AC_SpeedsterPickup::StaticRegisterNativesAC_SpeedsterPickup()
	{
	}
	IMPLEMENT_CLASS(AC_SpeedsterPickup, 3642840549);
	void AC_Boulder::StaticRegisterNativesAC_Boulder()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_Boulder::StaticClass(), "BoulderResponse",(Native)&AC_Boulder::execBoulderResponse);
		FNativeFunctionRegistrar::RegisterFunction(AC_Boulder::StaticClass(), "Push",(Native)&AC_Boulder::execPush);
	}
	IMPLEMENT_CLASS(AC_Boulder, 3371639043);
static class UEnum* E_CameraType_StaticEnum()
{
	extern AMAZABALLZ_API class UPackage* Z_Construct_UPackage__Script_Amazaballz();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AMAZABALLZ_API class UEnum* Z_Construct_UEnum_Amazaballz_E_CameraType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Amazaballz_E_CameraType, Z_Construct_UPackage__Script_Amazaballz(), TEXT("E_CameraType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_E_CameraType(E_CameraType_StaticEnum, TEXT("/Script/Amazaballz"), TEXT("E_CameraType"), false, nullptr, nullptr);
	void AC_Camera::StaticRegisterNativesAC_Camera()
	{
	}
	IMPLEMENT_CLASS(AC_Camera, 3970757041);
	void UC_MovingObjectComponent::StaticRegisterNativesUC_MovingObjectComponent()
	{
	}
	IMPLEMENT_CLASS(UC_MovingObjectComponent, 2403509816);
	void AC_Player::StaticRegisterNativesAC_Player()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "GetIndex",(Native)&AC_Player::execGetIndex);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "GetLives",(Native)&AC_Player::execGetLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "GetSpawnPosition",(Native)&AC_Player::execGetSpawnPosition);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "HasInfiniteLives",(Native)&AC_Player::execHasInfiniteLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "Jump",(Native)&AC_Player::execJump);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "Movement",(Native)&AC_Player::execMovement);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "Respawn",(Native)&AC_Player::execRespawn);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "SetIndex",(Native)&AC_Player::execSetIndex);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "SetInfiniteLives",(Native)&AC_Player::execSetInfiniteLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "SetIsJumping",(Native)&AC_Player::execSetIsJumping);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "SetLives",(Native)&AC_Player::execSetLives);
		FNativeFunctionRegistrar::RegisterFunction(AC_Player::StaticClass(), "SetSpawnPosition",(Native)&AC_Player::execSetSpawnPosition);
	}
	IMPLEMENT_CLASS(AC_Player, 2858465082);
static class UEnum* E_Team_StaticEnum()
{
	extern AMAZABALLZ_API class UPackage* Z_Construct_UPackage__Script_Amazaballz();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern AMAZABALLZ_API class UEnum* Z_Construct_UEnum_Amazaballz_E_Team();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Amazaballz_E_Team, Z_Construct_UPackage__Script_Amazaballz(), TEXT("E_Team"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_E_Team(E_Team_StaticEnum, TEXT("/Script/Amazaballz"), TEXT("E_Team"), false, nullptr, nullptr);
	void AC_Net::StaticRegisterNativesAC_Net()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_Net::StaticClass(), "GetTeam",(Native)&AC_Net::execGetTeam);
		FNativeFunctionRegistrar::RegisterFunction(AC_Net::StaticClass(), "NetResponse",(Native)&AC_Net::execNetResponse);
	}
	IMPLEMENT_CLASS(AC_Net, 1615726780);
	void AC_ProceduralLevelGenerator::StaticRegisterNativesAC_ProceduralLevelGenerator()
	{
		FNativeFunctionRegistrar::RegisterFunction(AC_ProceduralLevelGenerator::StaticClass(), "AddChunkForClass",(Native)&AC_ProceduralLevelGenerator::execAddChunkForClass);
		FNativeFunctionRegistrar::RegisterFunction(AC_ProceduralLevelGenerator::StaticClass(), "ClearChunks",(Native)&AC_ProceduralLevelGenerator::execClearChunks);
		FNativeFunctionRegistrar::RegisterFunction(AC_ProceduralLevelGenerator::StaticClass(), "GetProceduralChunks",(Native)&AC_ProceduralLevelGenerator::execGetProceduralChunks);
	}
	IMPLEMENT_CLASS(AC_ProceduralLevelGenerator, 4155654291);
	void AMovingObject::StaticRegisterNativesAMovingObject()
	{
	}
	IMPLEMENT_CLASS(AMovingObject, 3300333358);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACameraActor();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector4();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreaming_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UShapeComponent_NoRegister();

	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Ball_Respawn();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Ball_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Ball();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_CanBeAttacked();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_CanUsePickups();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_GetIndex();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_GetLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_GetSpeed();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_HasInfiniteLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_IsSpawning();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_Respawn();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetCanBeAttacked();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetCanUsePickups();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetIndex();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetInfiniteLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetSpawningStatus();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetSpawnPosition();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetSpeed();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Character_SetSpeedToNormal();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Character_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Character();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_BaseObstacle_ObstacleLeft();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_BaseObstacle_ObstacleResponse();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_BaseObstacle_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_BaseObstacle();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_HoleObstacle_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_HoleObstacle();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_PitObstacle_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_PitObstacle();
	AMAZABALLZ_API class UEnum* Z_Construct_UEnum_Amazaballz_E_AffectedCharacters();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_BasePickup_PickupDestroy();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_BasePickup_PickupResponse();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_BasePickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_BasePickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_CrystalSkullPickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_CrystalSkullPickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_DisablePickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_DisablePickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_FreezePickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_FreezePickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_InvisibilityPickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_InvisibilityPickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_MirrorPickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_MirrorPickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_SpeedBoostPickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_SpeedBoostPickup();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_SpeedsterPickup_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_SpeedsterPickup();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Boulder_BoulderResponse();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Boulder_Push();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Boulder_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Boulder();
	AMAZABALLZ_API class UEnum* Z_Construct_UEnum_Amazaballz_E_CameraType();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Camera_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Camera();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_UC_MovingObjectComponent_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_UC_MovingObjectComponent();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_GetIndex();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_GetLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_GetSpawnPosition();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_HasInfiniteLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_Jump();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_Movement();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_Respawn();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_SetIndex();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_SetInfiniteLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_SetIsJumping();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_SetLives();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Player_SetSpawnPosition();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Player_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Player();
	AMAZABALLZ_API class UEnum* Z_Construct_UEnum_Amazaballz_E_Team();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Net_GetTeam();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_Net_NetResponse();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Net_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_Net();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_ProceduralLevelGenerator_AddChunkForClass();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_ProceduralLevelGenerator_ClearChunks();
	AMAZABALLZ_API class UFunction* Z_Construct_UFunction_AC_ProceduralLevelGenerator_GetProceduralChunks();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_ProceduralLevelGenerator_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AC_ProceduralLevelGenerator();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AMovingObject_NoRegister();
	AMAZABALLZ_API class UClass* Z_Construct_UClass_AMovingObject();
	AMAZABALLZ_API class UPackage* Z_Construct_UPackage__Script_Amazaballz();
	UFunction* Z_Construct_UFunction_AC_Ball_Respawn()
	{
		UObject* Outer=Z_Construct_UClass_AC_Ball();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Respawn"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Ball Game Mode"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Ball.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_Ball_NoRegister()
	{
		return AC_Ball::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_Ball()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_Ball::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_Ball_Respawn());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_spawn_point_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("spawn_point_"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(spawn_point_, AC_Ball), 0x0020080000000005, Z_Construct_UClass_AActor_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Ball_Respawn(), "Respawn"); // 362631091
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game Modes/C_Ball.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Ball.h"));
				MetaData->SetValue(NewProp_spawn_point_, TEXT("Category"), TEXT("Ball Properties"));
				MetaData->SetValue(NewProp_spawn_point_, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Ball.h"));
				MetaData->SetValue(NewProp_spawn_point_, TEXT("ToolTip"), TEXT("What team this net belongs to."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_Ball(Z_Construct_UClass_AC_Ball, &AC_Ball::StaticClass, TEXT("AC_Ball"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_Ball);
	UFunction* Z_Construct_UFunction_AC_Character_CanBeAttacked()
	{
		struct C_Character_eventCanBeAttacked_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CanBeAttacked"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventCanBeAttacked_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, C_Character_eventCanBeAttacked_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, C_Character_eventCanBeAttacked_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, C_Character_eventCanBeAttacked_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current invincibility status of the player.\n@return bool& if this player has can be attacked by other players or not."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_CanUsePickups()
	{
		struct C_Character_eventCanUsePickups_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CanUsePickups"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventCanUsePickups_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, C_Character_eventCanUsePickups_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, C_Character_eventCanUsePickups_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, C_Character_eventCanUsePickups_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current pickup status of this player.\n@return bool& if this player can use pickups or not."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_GetIndex()
	{
		struct C_Character_eventGetIndex_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventGetIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, C_Character_eventGetIndex_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current player index for this character.\n@return int the index number for this player."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_GetLives()
	{
		struct C_Character_eventGetLives_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventGetLives_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, C_Character_eventGetLives_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current number of lives this player has.\n@return int the number of lives for this player."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_GetSpeed()
	{
		struct C_Character_eventGetSpeed_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventGetSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, C_Character_eventGetSpeed_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current speed modifier for this character.\n@return float& the value of the speed modifier for this character."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_HasInfiniteLives()
	{
		struct C_Character_eventHasInfiniteLives_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasInfiniteLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventHasInfiniteLives_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, C_Character_eventHasInfiniteLives_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, C_Character_eventHasInfiniteLives_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, C_Character_eventHasInfiniteLives_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current status for infinite lives for this player.\n@return bool& if this player has infinite lives or not."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_IsSpawning()
	{
		struct C_Character_eventIsSpawning_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsSpawning"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventIsSpawning_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, C_Character_eventIsSpawning_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, C_Character_eventIsSpawning_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, C_Character_eventIsSpawning_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to the current spawning status of this character.\n@return bool& if this player should respawn or not."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_Respawn()
	{
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Respawn"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides a way for this character to respawn."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetCanBeAttacked()
	{
		struct C_Character_eventSetCanBeAttacked_Parms
		{
			bool value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetCanBeAttacked"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetCanBeAttacked_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, C_Character_eventSetCanBeAttacked_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, C_Character_eventSetCanBeAttacked_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, C_Character_eventSetCanBeAttacked_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to disable attacks on this player.\n@param value if this player can be attacked."));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetCanUsePickups()
	{
		struct C_Character_eventSetCanUsePickups_Parms
		{
			bool value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetCanUsePickups"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetCanUsePickups_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, C_Character_eventSetCanUsePickups_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, C_Character_eventSetCanUsePickups_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, C_Character_eventSetCanUsePickups_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to disable pickups for this player.\n@param value if this player can use pickups or not."));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetIndex()
	{
		struct C_Character_eventSetIndex_Parms
		{
			int32 index;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetIndex_Parms));
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, C_Character_eventSetIndex_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to set the current player index value for this character.\n@param index the index number of this player."));
			MetaData->SetValue(NewProp_index, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetInfiniteLives()
	{
		struct C_Character_eventSetInfiniteLives_Parms
		{
			bool value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetInfiniteLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetInfiniteLives_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, C_Character_eventSetInfiniteLives_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, C_Character_eventSetInfiniteLives_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, C_Character_eventSetInfiniteLives_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to make this player immortal.\n@param value if this player has infinite lives or not."));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetLives()
	{
		struct C_Character_eventSetLives_Parms
		{
			int32 lives;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetLives_Parms));
			UProperty* NewProp_lives = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("lives"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(lives, C_Character_eventSetLives_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to set the current amount of lives this player has.\n@param lives how many lives to add onto this player."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetSpawningStatus()
	{
		struct C_Character_eventSetSpawningStatus_Parms
		{
			bool value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpawningStatus"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetSpawningStatus_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, C_Character_eventSetSpawningStatus_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, C_Character_eventSetSpawningStatus_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, C_Character_eventSetSpawningStatus_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to set the spawning status of this player.\n@param value if this player should spawn in or not."));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetSpawnPosition()
	{
		struct C_Character_eventSetSpawnPosition_Parms
		{
			FVector value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpawnPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(C_Character_eventSetSpawnPosition_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(value, C_Character_eventSetSpawnPosition_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the spawn location for this character.\n@param value where the spawn location is."));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetSpeed()
	{
		struct C_Character_eventSetSpeed_Parms
		{
			float speedMultiplier;
		};
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Character_eventSetSpeed_Parms));
			UProperty* NewProp_speedMultiplier = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("speedMultiplier"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speedMultiplier, C_Character_eventSetSpeed_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to alter the speed of this character.\n@param speedMultiplier how fast this player should move."));
			MetaData->SetValue(NewProp_speedMultiplier, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Character_SetSpeedToNormal()
	{
		UObject* Outer=Z_Construct_UClass_AC_Character();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpeedToNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows us to reset the speed modifier for this character to the original value."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_Character_NoRegister()
	{
		return AC_Character::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_Character()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_Character::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_CanBeAttacked());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_CanUsePickups());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_GetIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_GetLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_GetSpeed());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_HasInfiniteLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_IsSpawning());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_Respawn());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetCanBeAttacked());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetCanUsePickups());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetInfiniteLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetSpawningStatus());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetSpawnPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetSpeed());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Character_SetSpeedToNormal());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_lives_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("lives_"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(lives_, AC_Character), 0x0020080000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(has_infinite_lives_, AC_Character, bool);
				UProperty* NewProp_has_infinite_lives_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("has_infinite_lives_"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(has_infinite_lives_, AC_Character), 0x0020080000000001, CPP_BOOL_PROPERTY_BITMASK(has_infinite_lives_, AC_Character), sizeof(bool), true);
				UProperty* NewProp_player_index_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("player_index_"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(player_index_, AC_Character), 0x0020080000000001);
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, AC_Character), 0x0010000000020015);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, AC_Character), 0x0010000000020015);
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, AC_Character), 0x00400000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, AC_Character), 0x00400000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_CanBeAttacked(), "CanBeAttacked"); // 3933794255
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_CanUsePickups(), "CanUsePickups"); // 2378068695
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_GetIndex(), "GetIndex"); // 3646319046
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_GetLives(), "GetLives"); // 2200116313
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_GetSpeed(), "GetSpeed"); // 2444391842
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_HasInfiniteLives(), "HasInfiniteLives"); // 58930160
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_IsSpawning(), "IsSpawning"); // 695508773
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_Respawn(), "Respawn"); // 960739416
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetCanBeAttacked(), "SetCanBeAttacked"); // 3942138512
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetCanUsePickups(), "SetCanUsePickups"); // 2083301731
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetIndex(), "SetIndex"); // 3183767082
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetInfiniteLives(), "SetInfiniteLives"); // 2652775405
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetLives(), "SetLives"); // 3993053265
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetSpawningStatus(), "SetSpawningStatus"); // 3569947616
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetSpawnPosition(), "SetSpawnPosition"); // 2359484457
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetSpeed(), "SetSpeed"); // 3271416133
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Character_SetSpeedToNormal(), "SetSpeedToNormal"); // 3616909804
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_lives_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_lives_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_lives_, TEXT("ToolTip"), TEXT("How many lives does this player have?"));
				MetaData->SetValue(NewProp_has_infinite_lives_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_has_infinite_lives_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_has_infinite_lives_, TEXT("ToolTip"), TEXT("Will this player be able to constantly respawn in or not?"));
				MetaData->SetValue(NewProp_player_index_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_player_index_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_player_index_, TEXT("ToolTip"), TEXT("How many lives does this player have?"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("Follow camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("Characters/C_Character.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom positioning the camera behind the character"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_Character(Z_Construct_UClass_AC_Character, &AC_Character::StaticClass, TEXT("AC_Character"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_Character);
	UFunction* Z_Construct_UFunction_AC_BaseObstacle_ObstacleLeft()
	{
		struct C_BaseObstacle_eventObstacleLeft_Parms
		{
			AActor* actor;
		};
		UObject* Outer=Z_Construct_UClass_AC_BaseObstacle();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ObstacleLeft"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080400, 65535, sizeof(C_BaseObstacle_eventObstacleLeft_Parms));
			UProperty* NewProp_actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(actor, C_BaseObstacle_eventObstacleLeft_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Obstacles"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_BaseObstacle.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_BaseObstacle_ObstacleResponse()
	{
		struct C_BaseObstacle_eventObstacleResponse_Parms
		{
			AActor* actor;
		};
		UObject* Outer=Z_Construct_UClass_AC_BaseObstacle();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ObstacleResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080400, 65535, sizeof(C_BaseObstacle_eventObstacleResponse_Parms));
			UProperty* NewProp_actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(actor, C_BaseObstacle_eventObstacleResponse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Obstacles"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_BaseObstacle.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_BaseObstacle_NoRegister()
	{
		return AC_BaseObstacle::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_BaseObstacle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_BaseObstacle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900081;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_BaseObstacle_ObstacleLeft());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_BaseObstacle_ObstacleResponse());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(destroyed_after_use_, AC_BaseObstacle, bool);
				UProperty* NewProp_destroyed_after_use_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("destroyed_after_use_"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(destroyed_after_use_, AC_BaseObstacle), 0x0020080000000001, CPP_BOOL_PROPERTY_BITMASK(destroyed_after_use_, AC_BaseObstacle), sizeof(bool), true);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_BaseObstacle_ObstacleLeft(), "ObstacleLeft"); // 3651761737
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_BaseObstacle_ObstacleResponse(), "ObstacleResponse"); // 863461878
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Obstacles/C_BaseObstacle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_BaseObstacle.h"));
				MetaData->SetValue(NewProp_destroyed_after_use_, TEXT("Category"), TEXT("Obstacle Properties"));
				MetaData->SetValue(NewProp_destroyed_after_use_, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_BaseObstacle.h"));
				MetaData->SetValue(NewProp_destroyed_after_use_, TEXT("ToolTip"), TEXT("If this obstacle will be destroyed after a player interacts with it."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_BaseObstacle(Z_Construct_UClass_AC_BaseObstacle, &AC_BaseObstacle::StaticClass, TEXT("AC_BaseObstacle"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_BaseObstacle);
	UClass* Z_Construct_UClass_AC_HoleObstacle_NoRegister()
	{
		return AC_HoleObstacle::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_HoleObstacle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BaseObstacle();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_HoleObstacle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_death_delay_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("death_delay_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(death_delay_, AC_HoleObstacle), 0x0020080000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Obstacles/C_HoleObstacle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_HoleObstacle.h"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("Category"), TEXT("Obstacle Properties"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("ClampMax"), TEXT("3.0"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_HoleObstacle.h"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("ToolTip"), TEXT("How long will it take for the player to respawn?"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("UIMax"), TEXT("3.0"));
				MetaData->SetValue(NewProp_death_delay_, TEXT("UIMin"), TEXT("0.0"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_HoleObstacle(Z_Construct_UClass_AC_HoleObstacle, &AC_HoleObstacle::StaticClass, TEXT("AC_HoleObstacle"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_HoleObstacle);
	UClass* Z_Construct_UClass_AC_PitObstacle_NoRegister()
	{
		return AC_PitObstacle::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_PitObstacle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BaseObstacle();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_PitObstacle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_speed_multiplier_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speed_multiplier_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speed_multiplier_, AC_PitObstacle), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Obstacles/C_PitObstacle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_PitObstacle.h"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("Category"), TEXT("Obstacle Properties"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("ClampMax"), TEXT("1.0"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("ModuleRelativePath"), TEXT("Obstacles/C_PitObstacle.h"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("ToolTip"), TEXT("How fast the player will move when they interact with this obstacle? 0 = slow, 1 = normal speed."));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("UIMax"), TEXT("1.0"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("UIMin"), TEXT("0.0"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_PitObstacle(Z_Construct_UClass_AC_PitObstacle, &AC_PitObstacle::StaticClass, TEXT("AC_PitObstacle"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_PitObstacle);
	UEnum* Z_Construct_UEnum_Amazaballz_E_AffectedCharacters()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Amazaballz();
		extern uint32 Get_Z_Construct_UEnum_Amazaballz_E_AffectedCharacters_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("E_AffectedCharacters"), 0, Get_Z_Construct_UEnum_Amazaballz_E_AffectedCharacters_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("E_AffectedCharacters"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_INTERACTING_PLAYER")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_ALL_PLAYERS")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_ALL_NON_INTERACTING_PLAYERS")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_ALLY_TEAM")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_ENEMY_TEAM")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_ALL_ENEMY_CHARACTERS")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_AffectedCharacters::AF_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("E_AffectedCharacters::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AF_ALL_ENEMY_CHARACTERS.DisplayName"), TEXT("All Enemy Characters"));
			MetaData->SetValue(ReturnEnum, TEXT("AF_ALL_NON_INTERACTING_PLAYERS.DisplayName"), TEXT("All Non Interacting Players"));
			MetaData->SetValue(ReturnEnum, TEXT("AF_ALL_PLAYERS.DisplayName"), TEXT("All Players"));
			MetaData->SetValue(ReturnEnum, TEXT("AF_ALLY_TEAM.DisplayName"), TEXT("Ally Players"));
			MetaData->SetValue(ReturnEnum, TEXT("AF_ENEMY_TEAM.DisplayName"), TEXT("Enemy Players"));
			MetaData->SetValue(ReturnEnum, TEXT("AF_INTERACTING_PLAYER.DisplayName"), TEXT("Interacting Player"));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Pickups/C_BasePickup.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("* An enum to define who the pickups effect."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Amazaballz_E_AffectedCharacters_CRC() { return 2323341920U; }
	UFunction* Z_Construct_UFunction_AC_BasePickup_PickupDestroy()
	{
		UObject* Outer=Z_Construct_UClass_AC_BasePickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PickupDestroy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pickups"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Pickups/C_BasePickup.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_BasePickup_PickupResponse()
	{
		struct C_BasePickup_eventPickupResponse_Parms
		{
			AActor* actor;
		};
		UObject* Outer=Z_Construct_UClass_AC_BasePickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PickupResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080400, 65535, sizeof(C_BasePickup_eventPickupResponse_Parms));
			UProperty* NewProp_actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(actor, C_BasePickup_eventPickupResponse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pickups"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Pickups/C_BasePickup.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_BasePickup_NoRegister()
	{
		return AC_BasePickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_BasePickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_BasePickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900081;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_BasePickup_PickupDestroy());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_BasePickup_PickupResponse());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(destroyed_after_use_, AC_BasePickup, bool);
				UProperty* NewProp_destroyed_after_use_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("destroyed_after_use_"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(destroyed_after_use_, AC_BasePickup), 0x0020080000000015, CPP_BOOL_PROPERTY_BITMASK(destroyed_after_use_, AC_BasePickup), sizeof(bool), true);
				UProperty* NewProp_affected_characters_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("affected_characters_"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(affected_characters_, AC_BasePickup), 0x0020080000000005, Z_Construct_UEnum_Amazaballz_E_AffectedCharacters());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_BasePickup_PickupDestroy(), "PickupDestroy"); // 3584928175
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_BasePickup_PickupResponse(), "PickupResponse"); // 1470570013
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_BasePickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_BasePickup.h"));
				MetaData->SetValue(NewProp_destroyed_after_use_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_destroyed_after_use_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_BasePickup.h"));
				MetaData->SetValue(NewProp_destroyed_after_use_, TEXT("ToolTip"), TEXT("Will the pickup be destroyed after the first use?"));
				MetaData->SetValue(NewProp_affected_characters_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_affected_characters_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_BasePickup.h"));
				MetaData->SetValue(NewProp_affected_characters_, TEXT("ToolTip"), TEXT("Who will be affected by this pickup?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_BasePickup(Z_Construct_UClass_AC_BasePickup, &AC_BasePickup::StaticClass, TEXT("AC_BasePickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_BasePickup);
	UClass* Z_Construct_UClass_AC_CrystalSkullPickup_NoRegister()
	{
		return AC_CrystalSkullPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_CrystalSkullPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_CrystalSkullPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_amount_of_lives_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("amount_of_lives_"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(amount_of_lives_, AC_CrystalSkullPickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_CrystalSkullPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_CrystalSkullPickup.h"));
				MetaData->SetValue(NewProp_amount_of_lives_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_amount_of_lives_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_CrystalSkullPickup.h"));
				MetaData->SetValue(NewProp_amount_of_lives_, TEXT("ToolTip"), TEXT("How many lives will this skull restore?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_CrystalSkullPickup(Z_Construct_UClass_AC_CrystalSkullPickup, &AC_CrystalSkullPickup::StaticClass, TEXT("AC_CrystalSkullPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_CrystalSkullPickup);
	UClass* Z_Construct_UClass_AC_DisablePickup_NoRegister()
	{
		return AC_DisablePickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_DisablePickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_DisablePickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_disable_timer_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("disable_timer_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(disable_timer_, AC_DisablePickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_DisablePickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_DisablePickup.h"));
				MetaData->SetValue(NewProp_disable_timer_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_disable_timer_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_DisablePickup.h"));
				MetaData->SetValue(NewProp_disable_timer_, TEXT("ToolTip"), TEXT("How long will all of the other players not have access to pickups for?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_DisablePickup(Z_Construct_UClass_AC_DisablePickup, &AC_DisablePickup::StaticClass, TEXT("AC_DisablePickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_DisablePickup);
	UClass* Z_Construct_UClass_AC_FreezePickup_NoRegister()
	{
		return AC_FreezePickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_FreezePickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_FreezePickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_freeze_timer_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("freeze_timer_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(freeze_timer_, AC_FreezePickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_FreezePickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_FreezePickup.h"));
				MetaData->SetValue(NewProp_freeze_timer_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_freeze_timer_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_FreezePickup.h"));
				MetaData->SetValue(NewProp_freeze_timer_, TEXT("ToolTip"), TEXT("How long will all of the other players be frozen for?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_FreezePickup(Z_Construct_UClass_AC_FreezePickup, &AC_FreezePickup::StaticClass, TEXT("AC_FreezePickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_FreezePickup);
	UClass* Z_Construct_UClass_AC_InvisibilityPickup_NoRegister()
	{
		return AC_InvisibilityPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_InvisibilityPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_InvisibilityPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_invisibility_timer_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("invisibility_timer_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(invisibility_timer_, AC_InvisibilityPickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_InvisibilityPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_InvisibilityPickup.h"));
				MetaData->SetValue(NewProp_invisibility_timer_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_invisibility_timer_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_InvisibilityPickup.h"));
				MetaData->SetValue(NewProp_invisibility_timer_, TEXT("ToolTip"), TEXT("How long will the player be invisible for?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_InvisibilityPickup(Z_Construct_UClass_AC_InvisibilityPickup, &AC_InvisibilityPickup::StaticClass, TEXT("AC_InvisibilityPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_InvisibilityPickup);
	UClass* Z_Construct_UClass_AC_MirrorPickup_NoRegister()
	{
		return AC_MirrorPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_MirrorPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_MirrorPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_mirror_timer_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mirror_timer_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(mirror_timer_, AC_MirrorPickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_MirrorPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_MirrorPickup.h"));
				MetaData->SetValue(NewProp_mirror_timer_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_mirror_timer_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_MirrorPickup.h"));
				MetaData->SetValue(NewProp_mirror_timer_, TEXT("ToolTip"), TEXT("How long will the attacks of other players be reflected for?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_MirrorPickup(Z_Construct_UClass_AC_MirrorPickup, &AC_MirrorPickup::StaticClass, TEXT("AC_MirrorPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_MirrorPickup);
	UClass* Z_Construct_UClass_AC_SpeedBoostPickup_NoRegister()
	{
		return AC_SpeedBoostPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_SpeedBoostPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_SpeedBoostPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_speed_multiplier_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speed_multiplier_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speed_multiplier_, AC_SpeedBoostPickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_SpeedBoostPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_SpeedBoostPickup.h"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_SpeedBoostPickup.h"));
				MetaData->SetValue(NewProp_speed_multiplier_, TEXT("ToolTip"), TEXT("How fast the player will move when they interact with this pickup."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_SpeedBoostPickup(Z_Construct_UClass_AC_SpeedBoostPickup, &AC_SpeedBoostPickup::StaticClass, TEXT("AC_SpeedBoostPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_SpeedBoostPickup);
	UClass* Z_Construct_UClass_AC_SpeedsterPickup_NoRegister()
	{
		return AC_SpeedsterPickup::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_SpeedsterPickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AC_BasePickup();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_SpeedsterPickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_speedster_factor_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speedster_factor_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speedster_factor_, AC_SpeedsterPickup), 0x0040000000000001);
				UProperty* NewProp_speedster_timer_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speedster_timer_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speedster_timer_, AC_SpeedsterPickup), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickups/C_SpeedsterPickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickups/C_SpeedsterPickup.h"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("ClampMax"), TEXT("50.0"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("ClampMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_SpeedsterPickup.h"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("ToolTip"), TEXT("How will the player's speed be affected?"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("UIMax"), TEXT("50.0"));
				MetaData->SetValue(NewProp_speedster_factor_, TEXT("UIMin"), TEXT("0.0"));
				MetaData->SetValue(NewProp_speedster_timer_, TEXT("Category"), TEXT("Pickup Properties"));
				MetaData->SetValue(NewProp_speedster_timer_, TEXT("ModuleRelativePath"), TEXT("Pickups/C_SpeedsterPickup.h"));
				MetaData->SetValue(NewProp_speedster_timer_, TEXT("ToolTip"), TEXT("How long will player's speed be affected for?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_SpeedsterPickup(Z_Construct_UClass_AC_SpeedsterPickup, &AC_SpeedsterPickup::StaticClass, TEXT("AC_SpeedsterPickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_SpeedsterPickup);
	UFunction* Z_Construct_UFunction_AC_Boulder_BoulderResponse()
	{
		struct C_Boulder_eventBoulderResponse_Parms
		{
			AActor* actor;
		};
		UObject* Outer=Z_Construct_UClass_AC_Boulder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BoulderResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(C_Boulder_eventBoulderResponse_Parms));
			UProperty* NewProp_actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(actor, C_Boulder_eventBoulderResponse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Boulder"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Boulder.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides a response when an actor collides with this boulder.\n@param actor the actor that is colliding with this game object."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Boulder_Push()
	{
		struct C_Boulder_eventPush_Parms
		{
			FVector force;
		};
		UObject* Outer=Z_Construct_UClass_AC_Boulder();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Push"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(C_Boulder_eventPush_Parms));
			UProperty* NewProp_force = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("force"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(force, C_Boulder_eventPush_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Boulder"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Boulder.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides a way to push the boulder with a given impulse.\n@param force the force to apply to this boulder."));
			MetaData->SetValue(NewProp_force, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_Boulder_NoRegister()
	{
		return AC_Boulder::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_Boulder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_Boulder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_Boulder_BoulderResponse());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Boulder_Push());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_starting_force_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("starting_force_"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(starting_force_, AC_Boulder), 0x0020080000000005, Z_Construct_UScriptStruct_FVector());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Boulder_BoulderResponse(), "BoulderResponse"); // 647833931
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Boulder_Push(), "Push"); // 14769761
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game Modes/C_Boulder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Boulder.h"));
				MetaData->SetValue(NewProp_starting_force_, TEXT("Category"), TEXT("Boulder Properties"));
				MetaData->SetValue(NewProp_starting_force_, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Boulder.h"));
				MetaData->SetValue(NewProp_starting_force_, TEXT("ToolTip"), TEXT("How much force should be applied to start this boulder rolling?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_Boulder(Z_Construct_UClass_AC_Boulder, &AC_Boulder::StaticClass, TEXT("AC_Boulder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_Boulder);
	UEnum* Z_Construct_UEnum_Amazaballz_E_CameraType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Amazaballz();
		extern uint32 Get_Z_Construct_UEnum_Amazaballz_E_CameraType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("E_CameraType"), 0, Get_Z_Construct_UEnum_Amazaballz_E_CameraType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("E_CameraType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_CameraType::CT_FIXED")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_CameraType::CT_AUTO_SCROLL")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_CameraType::CT_SCROLL_TARGET")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_CameraType::CT_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("E_CameraType::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("CT_AUTO_SCROLL.DisplayName"), TEXT("Auto Scrolling Camera"));
			MetaData->SetValue(ReturnEnum, TEXT("CT_FIXED.DisplayName"), TEXT("Fixed Camera"));
			MetaData->SetValue(ReturnEnum, TEXT("CT_SCROLL_TARGET.DisplayName"), TEXT("Target Scrolling Camera"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("C_Camera.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("An enum to define what type of camera this is."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Amazaballz_E_CameraType_CRC() { return 1203354060U; }
	UClass* Z_Construct_UClass_AC_Camera_NoRegister()
	{
		return AC_Camera::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_Camera()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACameraActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_Camera::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_target_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("target_"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(target_, AC_Camera), 0x0020080000000005, Z_Construct_UClass_AActor_NoRegister());
				UProperty* NewProp_camera_type_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("camera_type_"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(camera_type_, AC_Camera), 0x0020080000000005, Z_Construct_UEnum_Amazaballz_E_CameraType());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Rendering"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("C_Camera.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("C_Camera.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Provides standard functionality for the game camera."));
				MetaData->SetValue(NewProp_target_, TEXT("Category"), TEXT("Camera Properties"));
				MetaData->SetValue(NewProp_target_, TEXT("ModuleRelativePath"), TEXT("C_Camera.h"));
				MetaData->SetValue(NewProp_target_, TEXT("ToolTip"), TEXT("What is the target for this camera?"));
				MetaData->SetValue(NewProp_camera_type_, TEXT("Category"), TEXT("Camera Properties"));
				MetaData->SetValue(NewProp_camera_type_, TEXT("ModuleRelativePath"), TEXT("C_Camera.h"));
				MetaData->SetValue(NewProp_camera_type_, TEXT("ToolTip"), TEXT("What type of camera is this?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_Camera(Z_Construct_UClass_AC_Camera, &AC_Camera::StaticClass, TEXT("AC_Camera"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_Camera);
	UClass* Z_Construct_UClass_UC_MovingObjectComponent_NoRegister()
	{
		return UC_MovingObjectComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UC_MovingObjectComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = UC_MovingObjectComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_local_waypoints_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("local_waypoints_"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(local_waypoints_, UC_MovingObjectComponent), 0x0040000000000001);
				UProperty* NewProp_local_waypoints__Inner = new(EC_InternalUseOnlyConstructor, NewProp_local_waypoints_, TEXT("local_waypoints_"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector4());
				UProperty* NewProp_speed_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speed_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speed_, UC_MovingObjectComponent), 0x0040000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/C_MovingObjectComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Components/C_MovingObjectComponent.h"));
				MetaData->SetValue(NewProp_local_waypoints_, TEXT("Category"), TEXT("Move Object"));
				MetaData->SetValue(NewProp_local_waypoints_, TEXT("ModuleRelativePath"), TEXT("Components/C_MovingObjectComponent.h"));
				MetaData->SetValue(NewProp_local_waypoints_, TEXT("ToolTip"), TEXT("The waypoints to move to."));
				MetaData->SetValue(NewProp_speed_, TEXT("Category"), TEXT("Move Object"));
				MetaData->SetValue(NewProp_speed_, TEXT("ModuleRelativePath"), TEXT("Components/C_MovingObjectComponent.h"));
				MetaData->SetValue(NewProp_speed_, TEXT("ToolTip"), TEXT("How fast will the object move between the waypoints."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UC_MovingObjectComponent(Z_Construct_UClass_UC_MovingObjectComponent, &UC_MovingObjectComponent::StaticClass, TEXT("UC_MovingObjectComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UC_MovingObjectComponent);
	UFunction* Z_Construct_UFunction_AC_Player_GetIndex()
	{
		struct C_Player_eventGetIndex_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventGetIndex_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, C_Player_eventGetIndex_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_GetLives()
	{
		struct C_Player_eventGetLives_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventGetLives_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(ReturnValue, C_Player_eventGetLives_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_GetSpawnPosition()
	{
		struct C_Player_eventGetSpawnPosition_Parms
		{
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetSpawnPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(C_Player_eventGetSpawnPosition_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, C_Player_eventGetSpawnPosition_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_HasInfiniteLives()
	{
		struct C_Player_eventHasInfiniteLives_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasInfiniteLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventHasInfiniteLives_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, C_Player_eventHasInfiniteLives_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, C_Player_eventHasInfiniteLives_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, C_Player_eventHasInfiniteLives_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_Jump()
	{
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Jump"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_Movement()
	{
		struct C_Player_eventMovement_Parms
		{
			float axis_value;
			bool is_right;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Movement"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(C_Player_eventMovement_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(is_right, C_Player_eventMovement_Parms, bool);
			UProperty* NewProp_is_right = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("is_right"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(is_right, C_Player_eventMovement_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(is_right, C_Player_eventMovement_Parms), sizeof(bool), true);
			UProperty* NewProp_axis_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("axis_value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(axis_value, C_Player_eventMovement_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_Respawn()
	{
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Respawn"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_SetIndex()
	{
		struct C_Player_eventSetIndex_Parms
		{
			int32 value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventSetIndex_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(value, C_Player_eventSetIndex_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_SetInfiniteLives()
	{
		struct C_Player_eventSetInfiniteLives_Parms
		{
			bool value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetInfiniteLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventSetInfiniteLives_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, C_Player_eventSetInfiniteLives_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, C_Player_eventSetInfiniteLives_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, C_Player_eventSetInfiniteLives_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_SetIsJumping()
	{
		struct C_Player_eventSetIsJumping_Parms
		{
			bool value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetIsJumping"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventSetIsJumping_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, C_Player_eventSetIsJumping_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, C_Player_eventSetIsJumping_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, C_Player_eventSetIsJumping_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_SetLives()
	{
		struct C_Player_eventSetLives_Parms
		{
			int32 value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetLives"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Player_eventSetLives_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(value, C_Player_eventSetLives_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Player_SetSpawnPosition()
	{
		struct C_Player_eventSetSpawnPosition_Parms
		{
			FVector value;
		};
		UObject* Outer=Z_Construct_UClass_AC_Player();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetSpawnPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(C_Player_eventSetSpawnPosition_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(value, C_Player_eventSetSpawnPosition_Parms), 0x0010000000000082, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_Player_NoRegister()
	{
		return AC_Player::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_Player()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_Player::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_GetIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_GetLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_GetSpawnPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_HasInfiniteLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_Jump());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_Movement());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_Respawn());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_SetIndex());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_SetInfiniteLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_SetIsJumping());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_SetLives());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Player_SetSpawnPosition());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_lives_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("lives_"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(lives_, AC_Player), 0x0020080000000001);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(has_infinite_lives_, AC_Player, bool);
				UProperty* NewProp_has_infinite_lives_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("has_infinite_lives_"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(has_infinite_lives_, AC_Player), 0x0020080000000001, CPP_BOOL_PROPERTY_BITMASK(has_infinite_lives_, AC_Player), sizeof(bool), true);
				UProperty* NewProp_index_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("index_"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(index_, AC_Player), 0x0020080000000001);
				UProperty* NewProp_jump_impulse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jump_impulse"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(jump_impulse, AC_Player), 0x0020080000000001);
				UProperty* NewProp_roll_torque_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("roll_torque_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(roll_torque_, AC_Player), 0x0020080000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_GetIndex(), "GetIndex"); // 348355243
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_GetLives(), "GetLives"); // 855132839
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_GetSpawnPosition(), "GetSpawnPosition"); // 3948564108
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_HasInfiniteLives(), "HasInfiniteLives"); // 2653026712
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_Jump(), "Jump"); // 3525070349
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_Movement(), "Movement"); // 4195763919
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_Respawn(), "Respawn"); // 1117682195
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_SetIndex(), "SetIndex"); // 600043771
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_SetInfiniteLives(), "SetInfiniteLives"); // 2639808709
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_SetIsJumping(), "SetIsJumping"); // 2861689328
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_SetLives(), "SetLives"); // 572745689
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Player_SetSpawnPosition(), "SetSpawnPosition"); // 518165656
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(NewProp_lives_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_lives_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(NewProp_lives_, TEXT("ToolTip"), TEXT("How many lives does this player have?"));
				MetaData->SetValue(NewProp_has_infinite_lives_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_has_infinite_lives_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(NewProp_has_infinite_lives_, TEXT("ToolTip"), TEXT("Will this player be able to constantly respawn in or not?"));
				MetaData->SetValue(NewProp_index_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_index_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(NewProp_index_, TEXT("ToolTip"), TEXT("What player is this?"));
				MetaData->SetValue(NewProp_jump_impulse, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_jump_impulse, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(NewProp_jump_impulse, TEXT("ToolTip"), TEXT("How much will the player jump up? NOTE: This also needs to be really high."));
				MetaData->SetValue(NewProp_roll_torque_, TEXT("Category"), TEXT("Player Properties"));
				MetaData->SetValue(NewProp_roll_torque_, TEXT("ModuleRelativePath"), TEXT("Characters/C_Player.h"));
				MetaData->SetValue(NewProp_roll_torque_, TEXT("ToolTip"), TEXT("How fast will this player move? NOTE: You need to make this value really high apparently."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_Player(Z_Construct_UClass_AC_Player, &AC_Player::StaticClass, TEXT("AC_Player"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_Player);
	UEnum* Z_Construct_UEnum_Amazaballz_E_Team()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Amazaballz();
		extern uint32 Get_Z_Construct_UEnum_Amazaballz_E_Team_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("E_Team"), 0, Get_Z_Construct_UEnum_Amazaballz_E_Team_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("E_Team"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_Team::T_TEAM1")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_Team::T_TEAM2")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("E_Team::T_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("E_Team::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Net.h"));
			MetaData->SetValue(ReturnEnum, TEXT("T_TEAM1.DisplayName"), TEXT("Team One"));
			MetaData->SetValue(ReturnEnum, TEXT("T_TEAM2.DisplayName"), TEXT("Team Two"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("* An enum to define what team this net belongs to."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Amazaballz_E_Team_CRC() { return 392157083U; }
	UFunction* Z_Construct_UFunction_AC_Net_GetTeam()
	{
		struct C_Net_eventGetTeam_Parms
		{
			TEnumAsByte<E_Team::Type> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_Net();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetTeam"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(C_Net_eventGetTeam_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, C_Net_eventGetTeam_Parms), 0x0010000000000580, Z_Construct_UEnum_Amazaballz_E_Team());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Ball Game Mode"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Net.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_Net_NetResponse()
	{
		struct C_Net_eventNetResponse_Parms
		{
			AActor* actor;
		};
		UObject* Outer=Z_Construct_UClass_AC_Net();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("NetResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(C_Net_eventNetResponse_Parms));
			UProperty* NewProp_actor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("actor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(actor, C_Net_eventNetResponse_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Ball Game Mode"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Net.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_Net_NoRegister()
	{
		return AC_Net::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_Net()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_Net::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_Net_GetTeam());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_Net_NetResponse());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_team_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("team_"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(team_, AC_Net), 0x0020080000000005, Z_Construct_UEnum_Amazaballz_E_Team());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Net_GetTeam(), "GetTeam"); // 1767176461
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_Net_NetResponse(), "NetResponse"); // 4249013655
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Game Modes/C_Net.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Net.h"));
				MetaData->SetValue(NewProp_team_, TEXT("Category"), TEXT("Net Properties"));
				MetaData->SetValue(NewProp_team_, TEXT("ModuleRelativePath"), TEXT("Game Modes/C_Net.h"));
				MetaData->SetValue(NewProp_team_, TEXT("ToolTip"), TEXT("What team this net belongs to."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_Net(Z_Construct_UClass_AC_Net, &AC_Net::StaticClass, TEXT("AC_Net"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_Net);
	UFunction* Z_Construct_UFunction_AC_ProceduralLevelGenerator_AddChunkForClass()
	{
		struct C_ProceduralLevelGenerator_eventAddChunkForClass_Parms
		{
			ULevelStreaming* chunk;
		};
		UObject* Outer=Z_Construct_UClass_AC_ProceduralLevelGenerator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddChunkForClass"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(C_ProceduralLevelGenerator_eventAddChunkForClass_Parms));
			UProperty* NewProp_chunk = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("chunk"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(chunk, C_ProceduralLevelGenerator_eventAddChunkForClass_Parms), 0x0010000000000080, Z_Construct_UClass_ULevelStreaming_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Procedural"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Adds a procedural level into our C++ reference."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_ProceduralLevelGenerator_ClearChunks()
	{
		UObject* Outer=Z_Construct_UClass_AC_ProceduralLevelGenerator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClearChunks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Procedural"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Clears all of the current procedural chunk references."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AC_ProceduralLevelGenerator_GetProceduralChunks()
	{
		struct C_ProceduralLevelGenerator_eventGetProceduralChunks_Parms
		{
			TArray<ULevelStreaming*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AC_ProceduralLevelGenerator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetProceduralChunks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(C_ProceduralLevelGenerator_eventGetProceduralChunks_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, C_ProceduralLevelGenerator_eventGetProceduralChunks_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_ULevelStreaming_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Procedural"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides access to our randomly generated level chunks.\n@return TArray<ULevelStreaming*> the array of level chunks."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AC_ProceduralLevelGenerator_NoRegister()
	{
		return AC_ProceduralLevelGenerator::StaticClass();
	}
	UClass* Z_Construct_UClass_AC_ProceduralLevelGenerator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AC_ProceduralLevelGenerator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AC_ProceduralLevelGenerator_AddChunkForClass());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_ProceduralLevelGenerator_ClearChunks());
				OuterClass->LinkChild(Z_Construct_UFunction_AC_ProceduralLevelGenerator_GetProceduralChunks());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_chunk_size_y_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("chunk_size_y_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(chunk_size_y_, AC_ProceduralLevelGenerator), 0x0020080000000015);
				UProperty* NewProp_chunk_size_x_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("chunk_size_x_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(chunk_size_x_, AC_ProceduralLevelGenerator), 0x0020080000000015);
				UProperty* NewProp_map_size_y_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("map_size_y_"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(map_size_y_, AC_ProceduralLevelGenerator), 0x0020080000000015);
				UProperty* NewProp_map_size_x_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("map_size_x_"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(map_size_x_, AC_ProceduralLevelGenerator), 0x0020080000000015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_ProceduralLevelGenerator_AddChunkForClass(), "AddChunkForClass"); // 1213614699
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_ProceduralLevelGenerator_ClearChunks(), "ClearChunks"); // 2647284242
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AC_ProceduralLevelGenerator_GetProceduralChunks(), "GetProceduralChunks"); // 3986216509
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Provides a way to procedurally generate levels."));
				MetaData->SetValue(NewProp_chunk_size_y_, TEXT("Category"), TEXT("Chunks"));
				MetaData->SetValue(NewProp_chunk_size_y_, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
				MetaData->SetValue(NewProp_chunk_size_y_, TEXT("ToolTip"), TEXT("How long can chunks be?"));
				MetaData->SetValue(NewProp_chunk_size_x_, TEXT("Category"), TEXT("Chunks"));
				MetaData->SetValue(NewProp_chunk_size_x_, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
				MetaData->SetValue(NewProp_chunk_size_x_, TEXT("ToolTip"), TEXT("How wide can chunks be?"));
				MetaData->SetValue(NewProp_map_size_y_, TEXT("Category"), TEXT("Map Properties"));
				MetaData->SetValue(NewProp_map_size_y_, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
				MetaData->SetValue(NewProp_map_size_y_, TEXT("ToolTip"), TEXT("How many chunks along the y axis?"));
				MetaData->SetValue(NewProp_map_size_x_, TEXT("Category"), TEXT("Map Properties"));
				MetaData->SetValue(NewProp_map_size_x_, TEXT("ModuleRelativePath"), TEXT("Procedural/C_ProceduralLevelGenerator.h"));
				MetaData->SetValue(NewProp_map_size_x_, TEXT("ToolTip"), TEXT("How many chunks along the x axis?"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AC_ProceduralLevelGenerator(Z_Construct_UClass_AC_ProceduralLevelGenerator, &AC_ProceduralLevelGenerator::StaticClass, TEXT("AC_ProceduralLevelGenerator"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AC_ProceduralLevelGenerator);
	UClass* Z_Construct_UClass_AMovingObject_NoRegister()
	{
		return AMovingObject::StaticClass();
	}
	UClass* Z_Construct_UClass_AMovingObject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Amazaballz();
			OuterClass = AMovingObject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_mesh_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mesh_"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(mesh_, AMovingObject), 0x0010000000080009, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
				UProperty* NewProp_root_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("root_"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(root_, AMovingObject), 0x0010000000080009, Z_Construct_UClass_UShapeComponent_NoRegister());
				UProperty* NewProp_local_waypoints_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("local_waypoints_"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(local_waypoints_, AMovingObject), 0x0010000000000001);
				UProperty* NewProp_local_waypoints__Inner = new(EC_InternalUseOnlyConstructor, NewProp_local_waypoints_, TEXT("local_waypoints_"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FVector4());
				UProperty* NewProp_speed_ = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("speed_"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(speed_, AMovingObject), 0x0010000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovingObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MovingObject.h"));
				MetaData->SetValue(NewProp_mesh_, TEXT("Category"), TEXT("Move Object"));
				MetaData->SetValue(NewProp_mesh_, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_mesh_, TEXT("ModuleRelativePath"), TEXT("MovingObject.h"));
				MetaData->SetValue(NewProp_mesh_, TEXT("ToolTip"), TEXT("The root collider component of the moving object.\nAllow this attribute to be edited anywhere within Unreal 4 under the heading Move Object."));
				MetaData->SetValue(NewProp_root_, TEXT("Category"), TEXT("Move Object"));
				MetaData->SetValue(NewProp_root_, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_root_, TEXT("ModuleRelativePath"), TEXT("MovingObject.h"));
				MetaData->SetValue(NewProp_root_, TEXT("ToolTip"), TEXT("The waypoints to move to.\nAllow this attribute to be edited anywhere within Unreal 4 under the heading Move Object."));
				MetaData->SetValue(NewProp_local_waypoints_, TEXT("Category"), TEXT("Move Object"));
				MetaData->SetValue(NewProp_local_waypoints_, TEXT("ModuleRelativePath"), TEXT("MovingObject.h"));
				MetaData->SetValue(NewProp_local_waypoints_, TEXT("ToolTip"), TEXT("How fast will the object move between the waypoints.\nAllow this attribute to be edited anywhere within Unreal 4 under the heading Move Object."));
				MetaData->SetValue(NewProp_speed_, TEXT("Category"), TEXT("Move Object"));
				MetaData->SetValue(NewProp_speed_, TEXT("ModuleRelativePath"), TEXT("MovingObject.h"));
				MetaData->SetValue(NewProp_speed_, TEXT("ToolTip"), TEXT("Attributes.\nAllow this attribute to be edited anywhere within Unreal 4 under the heading Move Object."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMovingObject(Z_Construct_UClass_AMovingObject, &AMovingObject::StaticClass, TEXT("AMovingObject"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMovingObject);
	UPackage* Z_Construct_UPackage__Script_Amazaballz()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Amazaballz")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xA58D25FF;
			Guid.B = 0x0E833AAC;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
